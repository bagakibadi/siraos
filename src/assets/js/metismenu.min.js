/*!
* metismenu https://github.com/onokumus/metismenu#readme
* A jQuery menu plugin
* @version 3.0.4
* @author Osman Nuri Okumus <onokumus@gmail.com> (https://github.com/onokumus)
* @license: MIT
*/
!(function (e, n) { typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = n(require('jquery')) : typeof define === 'function' && define.amd ? define(['jquery'], n) : (e = e || self).metisMenu = n(e.jQuery); }(this, (o) => {
  function s() { return (s = Object.assign || function (e) { for (let n = 1; n < arguments.length; n++) { const t = arguments[n]; for (const i in t)Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]); } return e; }).apply(this, arguments); } const a = (function (i) { const n = 'transitionend'; const r = { TRANSITION_END: 'mmTransitionEnd', triggerTransitionEnd(e) { i(e).trigger(n); }, supportsTransitionEnd() { return Boolean(n); } }; function e(e) { const n = this; let t = !1; return i(this).one(r.TRANSITION_END, () => { t = !0; }), setTimeout(() => { t || r.triggerTransitionEnd(n); }, e), this; } return i.fn.mmEmulateTransitionEnd = e, i.event.special[r.TRANSITION_END] = { bindType: n, delegateType: n, handle(e) { if (i(e.target).is(this)) return e.handleObj.handler.apply(this, arguments); } }, r; }(o = o && o.hasOwnProperty('default') ? o.default : o)); const e = 'metisMenu'; const g = 'metisMenu'; const n = `.${g}`; const t = o.fn[e]; const h = {
    toggle: !0, preventDefault: !0, triggerElement: 'a', parentTrigger: 'li', subMenu: 'ul',
  }; const l = {
    SHOW: `show${n}`, SHOWN: `shown${n}`, HIDE: `hide${n}`, HIDDEN: `hidden${n}`, CLICK_DATA_API: `click${n}.data-api`,
  }; const i = 'metismenu'; const f = 'mm-active'; const u = 'mm-show'; const d = 'mm-collapse'; const c = 'mm-collapsing'; const r = (function () {
    function r(e, n) { this.element = e, this.config = { ...h, ...n }, this.transitioning = null, this.init(); } const e = r.prototype; return e.init = function () {
      const s = this; const a = this.config; const e = o(this.element); e.addClass(i), e.find(`${a.parentTrigger}.${f}`).children(a.triggerElement).attr('aria-expanded', 'true'), e.find(`${a.parentTrigger}.${f}`).parents(a.parentTrigger).addClass(f), e.find(`${a.parentTrigger}.${f}`).parents(a.parentTrigger).children(a.triggerElement).attr('aria-expanded', 'true'), e.find(`${a.parentTrigger}.${f}`).has(a.subMenu).children(a.subMenu).addClass(`${d} ${u}`), e.find(a.parentTrigger).not(`.${f}`).has(a.subMenu).children(a.subMenu)
        .addClass(d), e.find(a.parentTrigger).children(a.triggerElement).on(l.CLICK_DATA_API, function (e) { const n = o(this); if (n.attr('aria-disabled') !== 'true') { a.preventDefault && n.attr('href') === '#' && e.preventDefault(); const t = n.parent(a.parentTrigger); const i = t.siblings(a.parentTrigger); const r = i.children(a.triggerElement); t.hasClass(f) ? (n.attr('aria-expanded', 'false'), s.removeActive(t)) : (n.attr('aria-expanded', 'true'), s.setActive(t), a.toggle && (s.removeActive(i), r.attr('aria-expanded', 'false'))), a.onTransitionStart && a.onTransitionStart(e); } });
    }, e.setActive = function (e) { o(e).addClass(f); const n = o(e).children(this.config.subMenu); n.length > 0 && !n.hasClass(u) && this.show(n); }, e.removeActive = function (e) { o(e).removeClass(f); const n = o(e).children(`${this.config.subMenu}.${u}`); n.length > 0 && this.hide(n); }, e.show = function (e) { const n = this; if (!this.transitioning && !o(e).hasClass(c)) { const t = o(e); const i = o.Event(l.SHOW); if (t.trigger(i), !i.isDefaultPrevented()) { if (t.parent(this.config.parentTrigger).addClass(f), this.config.toggle) { const r = t.parent(this.config.parentTrigger).siblings().children(`${this.config.subMenu}.${u}`); this.hide(r); }t.removeClass(d).addClass(c).height(0), this.setTransitioning(!0); t.height(e[0].scrollHeight).one(a.TRANSITION_END, () => { n.config && n.element && (t.removeClass(c).addClass(`${d} ${u}`).height(''), n.setTransitioning(!1), t.trigger(l.SHOWN)); }).mmEmulateTransitionEnd(350); } } }, e.hide = function (e) { const n = this; if (!this.transitioning && o(e).hasClass(u)) { const t = o(e); const i = o.Event(l.HIDE); if (t.trigger(i), !i.isDefaultPrevented()) { t.parent(this.config.parentTrigger).removeClass(f), t.height(t.height())[0].offsetHeight, t.addClass(c).removeClass(d).removeClass(u), this.setTransitioning(!0); const r = function () { n.config && n.element && (n.transitioning && n.config.onTransitionEnd && n.config.onTransitionEnd(), n.setTransitioning(!1), t.trigger(l.HIDDEN), t.removeClass(c).addClass(d)); }; t.height() === 0 || t.css('display') === 'none' ? r() : t.height(0).one(a.TRANSITION_END, r).mmEmulateTransitionEnd(350); } } }, e.setTransitioning = function (e) { this.transitioning = e; }, e.dispose = function () {
      o.removeData(this.element, g), o(this.element).find(this.config.parentTrigger).has(this.config.subMenu).children(this.config.triggerElement)
        .off('click'), this.transitioning = null, this.config = null, this.element = null;
    }, r.jQueryInterface = function (i) { return this.each(function () { const e = o(this); let n = e.data(g); const t = { ...h, ...e.data(), ...(typeof i === 'object' && i ? i : {}) }; if (n || (n = new r(this, t), e.data(g, n)), typeof i === 'string') { if (void 0 === n[i]) throw new Error(`No method named "${i}"`); n[i](); } }); }, r;
  }()); return o.fn[e] = r.jQueryInterface, o.fn[e].Constructor = r, o.fn[e].noConflict = function () { return o.fn[e] = t, r.jQueryInterface; }, r;
}));
// # sourceMappingURL=metisMenu.min.js.map
