/**
 * SimpleBar.js - v4.1.0
 * Scrollbars, simpler.
 * https://grsmto.github.io/simplebar/
 *
 * Made by Adrien Denat from a fork by Jonathan Nicol
 * Under MIT License
 */

!(function (t, e) { typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = e() : typeof define === 'function' && define.amd ? define(e) : (t = t || self).SimpleBar = e(); }(this, () => {
  const t = function (t) { if (typeof t !== 'function') throw TypeError(`${String(t)} is not a function`); return t; }; const e = function (t) { try { return !!t(); } catch (t) { return !0; } }; const i = {}.toString; const r = function (t) { return i.call(t).slice(8, -1); }; const n = ''.split; const s = e(() => !Object('z').propertyIsEnumerable(0)) ? function (t) { return r(t) == 'String' ? n.call(t, '') : Object(t); } : Object; const o = function (t) { if (t == null) throw TypeError(`Can't call method on ${t}`); return t; }; const a = function (t) { return Object(o(t)); }; const l = Math.ceil; const c = Math.floor; const u = function (t) { return isNaN(t = +t) ? 0 : (t > 0 ? c : l)(t); }; const h = Math.min; const f = function (t) { return t > 0 ? h(u(t), 9007199254740991) : 0; }; const d = function (t) { return typeof t === 'object' ? t !== null : typeof t === 'function'; }; const p = Array.isArray || function (t) { return r(t) == 'Array'; }; const v = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {}; function g(t, e) { return t(e = { exports: {} }, e.exports), e.exports; } let b; let m; let y; let x; const E = typeof window === 'object' && window && window.Math == Math ? window : typeof self === 'object' && self && self.Math == Math ? self : Function('return this')(); const w = !e(() => Object.defineProperty({}, 'a', { get() { return 7; } }).a != 7); const O = E.document; const _ = d(O) && d(O.createElement); const S = !w && !e(() => { return Object.defineProperty((t = 'div', _ ? O.createElement(t) : {}), 'a', { get() { return 7; } }).a != 7; let t; }); const L = function (t) { if (!d(t)) throw TypeError(`${String(t)} is not an object`); return t; }; const A = function (t, e) { if (!d(t)) return t; let i; let r; if (e && typeof (i = t.toString) === 'function' && !d(r = i.call(t))) return r; if (typeof (i = t.valueOf) === 'function' && !d(r = i.call(t))) return r; if (!e && typeof (i = t.toString) === 'function' && !d(r = i.call(t))) return r; throw TypeError("Can't convert object to primitive value"); }; const k = Object.defineProperty; const M = { f: w ? k : function (t, e, i) { if (L(t), e = A(e, !0), L(i), S) try { return k(t, e, i); } catch (t) {} if ('get' in i || 'set' in i) throw TypeError('Accessors not supported'); return 'value' in i && (t[e] = i.value), t; } }; const W = function (t, e) {
    return {
      enumerable: !(1 & t), configurable: !(2 & t), writable: !(4 & t), value: e,
    };
  }; const T = w ? function (t, e, i) { return M.f(t, e, W(1, i)); } : function (t, e, i) { return t[e] = i, t; }; const R = function (t, e) { try { T(E, t, e); } catch (i) { E[t] = e; } return e; }; const j = g((t) => { const e = E['__core-js_shared__'] || R('__core-js_shared__', {}); (t.exports = function (t, i) { return e[t] || (e[t] = void 0 !== i ? i : {}); })('versions', []).push({ version: '3.0.1', mode: 'global', copyright: 'Â© 2019 Denis Pushkarev (zloirock.ru)' }); }); let C = 0; const N = Math.random(); const z = function (t) { return 'Symbol('.concat(void 0 === t ? '' : t, ')_', (++C + N).toString(36)); }; const D = !e(() => !String(Symbol())); const V = j('wks'); const B = E.Symbol; const I = function (t) { return V[t] || (V[t] = D && B[t] || (D ? B : z)(`Symbol.${t}`)); }; const P = I('species'); const H = function (t, e) { let i; return p(t) && (typeof (i = t.constructor) !== 'function' || i !== Array && !p(i.prototype) ? d(i) && (i = i[P]) === null && (i = void 0) : i = void 0), new (void 0 === i ? Array : i)(e === 0 ? 0 : e); }; const q = function (e, i) { const r = e == 1; const n = e == 2; const o = e == 3; const l = e == 4; const c = e == 6; const u = e == 5 || c; const h = i || H; return function (i, d, p) { for (var v, g, b = a(i), m = s(b), y = (function (e, i, r) { if (t(e), void 0 === i) return e; switch (r) { case 0: return function () { return e.call(i); }; case 1: return function (t) { return e.call(i, t); }; case 2: return function (t, r) { return e.call(i, t, r); }; case 3: return function (t, r, n) { return e.call(i, t, r, n); }; } return function () { return e.apply(i, arguments); }; }(d, p, 3)), x = f(m.length), E = 0, w = r ? h(i, x) : n ? h(i, 0) : void 0; x > E; E++) if ((u || E in m) && (g = y(v = m[E], E, b), e)) if (r)w[E] = g; else if (g) switch (e) { case 3: return !0; case 5: return v; case 6: return E; case 2: w.push(v); } else if (l) return !1; return c ? -1 : o || l ? l : w; }; }; const F = I('species'); const $ = {}.propertyIsEnumerable; const Y = Object.getOwnPropertyDescriptor; const X = { f: Y && !$.call({ 1: 2 }, 1) ? function (t) { const e = Y(this, t); return !!e && e.enumerable; } : $ }; const G = function (t) { return s(o(t)); }; const K = {}.hasOwnProperty; const U = function (t, e) { return K.call(t, e); }; const J = Object.getOwnPropertyDescriptor; const Q = { f: w ? J : function (t, e) { if (t = G(t), e = A(e, !0), S) try { return J(t, e); } catch (t) {} if (U(t, e)) return W(!X.f.call(t, e), t[e]); } }; const Z = j('native-function-to-string', Function.toString); const tt = E.WeakMap; const et = typeof tt === 'function' && /native code/.test(Z.call(tt)); const it = j('keys'); const rt = {}; const nt = E.WeakMap; if (et) {
    const st = new nt(); const ot = st.get; const at = st.has; const
      lt = st.set; b = function (t, e) { return lt.call(st, t, e), e; }, m = function (t) { return ot.call(st, t) || {}; }, y = function (t) { return at.call(st, t); };
  } else { const ct = it[x = 'state'] || (it[x] = z(x)); rt[ct] = !0, b = function (t, e) { return T(t, ct, e), e; }, m = function (t) { return U(t, ct) ? t[ct] : {}; }, y = function (t) { return U(t, ct); }; } let ut; let ht; const ft = {
    set: b, get: m, has: y, enforce(t) { return y(t) ? m(t) : b(t, {}); }, getterFor(t) { return function (e) { let i; if (!d(e) || (i = m(e)).type !== t) throw TypeError(`Incompatible receiver, ${t} required`); return i; }; },
  }; const dt = g((t) => { const e = ft.get; const i = ft.enforce; const r = String(Z).split('toString'); j('inspectSource', (t) => Z.call(t)), (t.exports = function (t, e, n, s) { const o = !!s && !!s.unsafe; let a = !!s && !!s.enumerable; const l = !!s && !!s.noTargetGet; typeof n === 'function' && (typeof e !== 'string' || U(n, 'name') || T(n, 'name', e), i(n).source = r.join(typeof e === 'string' ? e : '')), t !== E ? (o ? !l && t[e] && (a = !0) : delete t[e], a ? t[e] = n : T(t, e, n)) : a ? t[e] = n : R(e, n); })(Function.prototype, 'toString', function () { return typeof this === 'function' && e(this).source || Z.call(this); }); }); const pt = Math.max; const vt = Math.min; const gt = (ut = !1, function (t, e, i) { let r; const n = G(t); const s = f(n.length); let o = (function (t, e) { const i = u(t); return i < 0 ? pt(i + e, 0) : vt(i, e); }(i, s)); if (ut && e != e) { for (;s > o;) if ((r = n[o++]) != r) return !0; } else for (;s > o; o++) if ((ut || o in n) && n[o] === e) return ut || o || 0; return !ut && -1; }); const bt = function (t, e) { let i; const r = G(t); let n = 0; const s = []; for (i in r)!U(rt, i) && U(r, i) && s.push(i); for (;e.length > n;)U(r, i = e[n++]) && (~gt(s, i) || s.push(i)); return s; }; const mt = ['constructor', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'toLocaleString', 'toString', 'valueOf']; const yt = mt.concat('length', 'prototype'); const xt = { f: Object.getOwnPropertyNames || function (t) { return bt(t, yt); } }; const Et = { f: Object.getOwnPropertySymbols }; const wt = E.Reflect; const Ot = wt && wt.ownKeys || function (t) { const e = xt.f(L(t)); const i = Et.f; return i ? e.concat(i(t)) : e; }; const _t = function (t, e) { for (let i = Ot(e), r = M.f, n = Q.f, s = 0; s < i.length; s++) { const o = i[s]; U(t, o) || r(t, o, n(e, o)); } }; const St = /#|\.prototype\./; const Lt = function (t, i) { const r = kt[At(t)]; return r == Wt || r != Mt && (typeof i === 'function' ? e(i) : !!i); }; var At = Lt.normalize = function (t) { return String(t).replace(St, '.').toLowerCase(); }; var kt = Lt.data = {}; var Mt = Lt.NATIVE = 'N'; var Wt = Lt.POLYFILL = 'P'; const Tt = Lt; const Rt = Q.f; const jt = function (t, e) { let i; let r; let n; let s; let o; const a = t.target; const l = t.global; const c = t.stat; if (i = l ? E : c ? E[a] || R(a, {}) : (E[a] || {}).prototype) for (r in e) { if (s = e[r], n = t.noTargetGet ? (o = Rt(i, r)) && o.value : i[r], !Tt(l ? r : a + (c ? '.' : '#') + r, t.forced) && void 0 !== n) { if (typeof s === typeof n) continue; _t(s, n); }(t.sham || n && n.sham) && T(s, 'sham', !0), dt(i, r, s, t); } }; const Ct = q(2); jt({ target: 'Array', proto: !0, forced: !(ht = 'filter', !e(() => { const t = []; return (t.constructor = {})[F] = function () { return { foo: 1 }; }, t[ht](Boolean).foo !== 1; })) }, { filter(t) { return Ct(this, t, arguments[1]); } }); const Nt = function (t, i) { const r = [][t]; return !r || !e(() => { r.call(null, i || (() => { throw 1; }), 1); }); }; const zt = [].forEach; const Dt = q(0); const Vt = Nt('forEach') ? function (t) { return Dt(this, t, arguments[1]); } : zt; jt({ target: 'Array', proto: !0, forced: [].forEach != Vt }, { forEach: Vt }); jt({ target: 'Array', proto: !0, forced: Nt('reduce') }, { reduce(e) { return (function (e, i, r, n, o) { t(i); const l = a(e); const c = s(l); const u = f(l.length); let h = o ? u - 1 : 0; const d = o ? -1 : 1; if (r < 2) for (;;) { if (h in c) { n = c[h], h += d; break; } if (h += d, o ? h < 0 : u <= h) throw TypeError('Reduce of empty array with no initial value'); } for (;o ? h >= 0 : u > h; h += d)h in c && (n = i(n, c[h], h, l)); return n; }(this, e, arguments.length, arguments[1], !1)); } }); const Bt = M.f; const It = Function.prototype; const Pt = It.toString; const Ht = /^\s*function ([^ (]*)/; !w || 'name' in It || Bt(It, 'name', { configurable: !0, get() { try { return Pt.call(this).match(Ht)[1]; } catch (t) { return ''; } } }); const qt = Object.keys || function (t) { return bt(t, mt); }; const Ft = Object.assign; const $t = !Ft || e(() => { const t = {}; const e = {}; const i = Symbol(); return t[i] = 7, 'abcdefghijklmnopqrst'.split('').forEach((t) => { e[t] = t; }), ({ ...t })[i] != 7 || qt({ ...e }).join('') != 'abcdefghijklmnopqrst'; }) ? function (t, e) { for (var i = a(t), r = arguments.length, n = 1, o = Et.f, l = X.f; r > n;) for (var c, u = s(arguments[n++]), h = o ? qt(u).concat(o(u)) : qt(u), f = h.length, d = 0; f > d;)l.call(u, c = h[d++]) && (i[c] = u[c]); return i; } : Ft; jt({ target: 'Object', stat: !0, forced: Object.assign !== $t }, { assign: $t }); const Yt = '\t\n\v\f\r Â áââââââââââââ¯âã\u2028\u2029\ufeff'; const Xt = `[${Yt}]`; const Gt = RegExp(`^${Xt}${Xt}*`); const Kt = RegExp(`${Xt + Xt}*$`); const Ut = E.parseInt; const Jt = /^[-+]?0[xX]/; const Qt = Ut(`${Yt}08`) !== 8 || Ut(`${Yt}0x16`) !== 22 ? function (t, e) { const i = (function (t, e) { return t = String(o(t)), 1 & e && (t = t.replace(Gt, '')), 2 & e && (t = t.replace(Kt, '')), t; }(String(t), 3)); return Ut(i, e >>> 0 || (Jt.test(i) ? 16 : 10)); } : Ut; jt({ global: !0, forced: parseInt != Qt }, { parseInt: Qt }); let Zt; let te; const ee = RegExp.prototype.exec; const ie = String.prototype.replace; let re = ee; const ne = (Zt = /a/, te = /b*/g, ee.call(Zt, 'a'), ee.call(te, 'a'), Zt.lastIndex !== 0 || te.lastIndex !== 0); const se = void 0 !== /()??/.exec('')[1]; (ne || se) && (re = function (t) { let e; let i; let r; let n; const s = this; return se && (i = new RegExp(`^${s.source}$(?!\\s)`, function () { const t = L(this); let e = ''; return t.global && (e += 'g'), t.ignoreCase && (e += 'i'), t.multiline && (e += 'm'), t.unicode && (e += 'u'), t.sticky && (e += 'y'), e; }.call(s))), ne && (e = s.lastIndex), r = ee.call(s, t), ne && r && (s.lastIndex = s.global ? r.index + r[0].length : e), se && r && r.length > 1 && ie.call(r[0], i, function () { for (n = 1; n < arguments.length - 2; n++) void 0 === arguments[n] && (r[n] = void 0); }), r; }); const oe = re; jt({ target: 'RegExp', proto: !0, forced: /./.exec !== oe }, { exec: oe }); const ae = function (t, e, i) { return e + (i ? (function (t, e, i) { let r; let n; const s = String(o(t)); const a = u(e); const l = s.length; return a < 0 || a >= l ? i ? '' : void 0 : (r = s.charCodeAt(a)) < 55296 || r > 56319 || a + 1 === l || (n = s.charCodeAt(a + 1)) < 56320 || n > 57343 ? i ? s.charAt(a) : r : i ? s.slice(a, a + 2) : n - 56320 + (r - 55296 << 10) + 65536; }(t, e, !0)).length : 1); }; const le = function (t, e) { const i = t.exec; if (typeof i === 'function') { const n = i.call(t, e); if (typeof n !== 'object') throw TypeError('RegExp exec method returned something other than an Object or null'); return n; } if (r(t) !== 'RegExp') throw TypeError('RegExp#exec called on incompatible receiver'); return oe.call(t, e); }; const ce = I('species'); const ue = !e(() => { const t = /./; return t.exec = function () { const t = []; return t.groups = { a: '7' }, t; }, ''.replace(t, '$<a>') !== '7'; }); const he = !e(() => { const t = /(?:)/; const e = t.exec; t.exec = function () { return e.apply(this, arguments); }; const i = 'ab'.split(t); return i.length !== 2 || i[0] !== 'a' || i[1] !== 'b'; }); const fe = function (t, i, r, n) { const s = I(t); const o = !e(() => { const e = {}; return e[s] = function () { return 7; }, ''[t](e) != 7; }); const a = o && !e(() => { let e = !1; const i = /a/; return i.exec = function () { return e = !0, null; }, t === 'split' && (i.constructor = {}, i.constructor[ce] = function () { return i; }), i[s](''), !e; }); if (!o || !a || t === 'replace' && !ue || t === 'split' && !he) { const l = /./[s]; const c = r(s, ''[t], (t, e, i, r, n) => (e.exec === oe ? o && !n ? { done: !0, value: l.call(e, i, r) } : { done: !0, value: t.call(i, e, r) } : { done: !1 })); const u = c[0]; const h = c[1]; dt(String.prototype, t, u), dt(RegExp.prototype, s, i == 2 ? function (t, e) { return h.call(t, this, e); } : function (t) { return h.call(t, this); }), n && T(RegExp.prototype[s], 'sham', !0); } }; fe('match', 1, (t, e, i) => [function (e) { const i = o(this); const r = e == null ? void 0 : e[t]; return void 0 !== r ? r.call(e, i) : new RegExp(e)[t](String(i)); }, function (t) { const r = i(e, t, this); if (r.done) return r.value; const n = L(t); const s = String(this); if (!n.global) return le(n, s); const o = n.unicode; n.lastIndex = 0; for (var a, l = [], c = 0; (a = le(n, s)) !== null;) { const u = String(a[0]); l[c] = u, u === '' && (n.lastIndex = ae(s, f(n.lastIndex), o)), c++; } return c === 0 ? null : l; }]); const de = Math.max; const pe = Math.min; const ve = Math.floor; const ge = /\$([$&`']|\d\d?|<[^>]*>)/g; const be = /\$([$&`']|\d\d?)/g; fe('replace', 2, (t, e, i) => { return [function (i, r) { const n = o(this); const s = i == null ? void 0 : i[t]; return void 0 !== s ? s.call(i, n, r) : e.call(String(n), i, r); }, function (t, n) { const s = i(e, t, this, n); if (s.done) return s.value; const o = L(t); const a = String(this); const l = typeof n === 'function'; l || (n = String(n)); const c = o.global; if (c) { var h = o.unicode; o.lastIndex = 0; } for (var d = []; ;) { var p = le(o, a); if (p === null) break; if (d.push(p), !c) break; String(p[0]) === '' && (o.lastIndex = ae(a, f(o.lastIndex), h)); } for (var v, g = '', b = 0, m = 0; m < d.length; m++) { p = d[m]; for (var y = String(p[0]), x = de(pe(u(p.index), a.length), 0), E = [], w = 1; w < p.length; w++)E.push(void 0 === (v = p[w]) ? v : String(v)); const O = p.groups; if (l) { const _ = [y].concat(E, x, a); void 0 !== O && _.push(O); var S = String(n.apply(void 0, _)); } else S = r(y, a, x, E, O, n); x >= b && (g += a.slice(b, x) + S, b = x + y.length); } return g + a.slice(b); }]; function r(t, i, r, n, s, o) { const l = r + t.length; const c = n.length; let u = be; return void 0 !== s && (s = a(s), u = ge), e.call(o, u, (e, o) => { let a; switch (o.charAt(0)) { case '$': return '$'; case '&': return t; case '`': return i.slice(0, r); case "'": return i.slice(l); case '<': a = s[o.slice(1, -1)]; break; default: var u = +o; if (u === 0) return e; if (u > c) { const h = ve(u / 10); return h === 0 ? e : h <= c ? void 0 === n[h - 1] ? o.charAt(1) : n[h - 1] + o.charAt(1) : e; }a = n[u - 1]; } return void 0 === a ? '' : a; }); } }); for (const me in {
    CSSRuleList: 0, CSSStyleDeclaration: 0, CSSValueList: 0, ClientRectList: 0, DOMRectList: 0, DOMStringList: 0, DOMTokenList: 1, DataTransferItemList: 0, FileList: 0, HTMLAllCollection: 0, HTMLCollection: 0, HTMLFormElement: 0, HTMLSelectElement: 0, MediaList: 0, MimeTypeArray: 0, NamedNodeMap: 0, NodeList: 1, PaintRequestList: 0, Plugin: 0, PluginArray: 0, SVGLengthList: 0, SVGNumberList: 0, SVGPathSegList: 0, SVGPointList: 0, SVGStringList: 0, SVGTransformList: 0, SourceBufferList: 0, StyleSheetList: 0, TextTrackCueList: 0, TextTrackList: 0, TouchList: 0,
  }) { const ye = E[me]; const xe = ye && ye.prototype; if (xe && xe.forEach !== Vt) try { T(xe, 'forEach', Vt); } catch (t) { xe.forEach = Vt; } } const Ee = 'Expected a function'; const we = NaN; const Oe = '[object Symbol]'; const _e = /^\s+|\s+$/g; const Se = /^[-+]0x[0-9a-f]+$/i; const Le = /^0b[01]+$/i; const Ae = /^0o[0-7]+$/i; const ke = parseInt; const Me = typeof v === 'object' && v && v.Object === Object && v; const We = typeof self === 'object' && self && self.Object === Object && self; const Te = Me || We || Function('return this')(); const Re = Object.prototype.toString; const je = Math.max; const Ce = Math.min; const Ne = function () { return Te.Date.now(); }; function ze(t, e, i) { let r; let n; let s; let o; let a; let l; let c = 0; let u = !1; let h = !1; let f = !0; if (typeof t !== 'function') throw new TypeError(Ee); function d(e) { const i = r; const s = n; return r = n = void 0, c = e, o = t.apply(s, i); } function p(t) { const i = t - l; return void 0 === l || i >= e || i < 0 || h && t - c >= s; } function v() { const t = Ne(); if (p(t)) return g(t); a = setTimeout(v, (function (t) { const i = e - (t - l); return h ? Ce(i, s - (t - c)) : i; }(t))); } function g(t) { return a = void 0, f && r ? d(t) : (r = n = void 0, o); } function b() { const t = Ne(); const i = p(t); if (r = arguments, n = this, l = t, i) { if (void 0 === a) return (function (t) { return c = t, a = setTimeout(v, e), u ? d(t) : o; }(l)); if (h) return a = setTimeout(v, e), d(l); } return void 0 === a && (a = setTimeout(v, e)), o; } return e = Ve(e) || 0, De(i) && (u = !!i.leading, s = (h = 'maxWait' in i) ? je(Ve(i.maxWait) || 0, e) : s, f = 'trailing' in i ? !!i.trailing : f), b.cancel = function () { void 0 !== a && clearTimeout(a), c = 0, r = l = n = a = void 0; }, b.flush = function () { return void 0 === a ? o : g(Ne()); }, b; } function De(t) { const e = typeof t; return !!t && (e == 'object' || e == 'function'); } function Ve(t) { if (typeof t === 'number') return t; if (function (t) { return typeof t === 'symbol' || (function (t) { return !!t && typeof t === 'object'; }(t)) && Re.call(t) == Oe; }(t)) return we; if (De(t)) { const e = typeof t.valueOf === 'function' ? t.valueOf() : t; t = De(e) ? `${e}` : e; } if (typeof t !== 'string') return t === 0 ? t : +t; t = t.replace(_e, ''); const i = Le.test(t); return i || Ae.test(t) ? ke(t.slice(2), i ? 2 : 8) : Se.test(t) ? we : +t; } const Be = function (t, e, i) { let r = !0; let n = !0; if (typeof t !== 'function') throw new TypeError(Ee); return De(i) && (r = 'leading' in i ? !!i.leading : r, n = 'trailing' in i ? !!i.trailing : n), ze(t, e, { leading: r, maxWait: e, trailing: n }); }; const Ie = 'Expected a function'; const Pe = NaN; const He = '[object Symbol]'; const qe = /^\s+|\s+$/g; const Fe = /^[-+]0x[0-9a-f]+$/i; const $e = /^0b[01]+$/i; const Ye = /^0o[0-7]+$/i; const Xe = parseInt; const Ge = typeof v === 'object' && v && v.Object === Object && v; const Ke = typeof self === 'object' && self && self.Object === Object && self; const Ue = Ge || Ke || Function('return this')(); const Je = Object.prototype.toString; const Qe = Math.max; const Ze = Math.min; const ti = function () { return Ue.Date.now(); }; function ei(t) { const e = typeof t; return !!t && (e == 'object' || e == 'function'); } function ii(t) { if (typeof t === 'number') return t; if (function (t) { return typeof t === 'symbol' || (function (t) { return !!t && typeof t === 'object'; }(t)) && Je.call(t) == He; }(t)) return Pe; if (ei(t)) { const e = typeof t.valueOf === 'function' ? t.valueOf() : t; t = ei(e) ? `${e}` : e; } if (typeof t !== 'string') return t === 0 ? t : +t; t = t.replace(qe, ''); const i = $e.test(t); return i || Ye.test(t) ? Xe(t.slice(2), i ? 2 : 8) : Fe.test(t) ? Pe : +t; } const ri = function (t, e, i) { let r; let n; let s; let o; let a; let l; let c = 0; let u = !1; let h = !1; let f = !0; if (typeof t !== 'function') throw new TypeError(Ie); function d(e) { const i = r; const s = n; return r = n = void 0, c = e, o = t.apply(s, i); } function p(t) { const i = t - l; return void 0 === l || i >= e || i < 0 || h && t - c >= s; } function v() { const t = ti(); if (p(t)) return g(t); a = setTimeout(v, (function (t) { const i = e - (t - l); return h ? Ze(i, s - (t - c)) : i; }(t))); } function g(t) { return a = void 0, f && r ? d(t) : (r = n = void 0, o); } function b() { const t = ti(); const i = p(t); if (r = arguments, n = this, l = t, i) { if (void 0 === a) return (function (t) { return c = t, a = setTimeout(v, e), u ? d(t) : o; }(l)); if (h) return a = setTimeout(v, e), d(l); } return void 0 === a && (a = setTimeout(v, e)), o; } return e = ii(e) || 0, ei(i) && (u = !!i.leading, s = (h = 'maxWait' in i) ? Qe(ii(i.maxWait) || 0, e) : s, f = 'trailing' in i ? !!i.trailing : f), b.cancel = function () { void 0 !== a && clearTimeout(a), c = 0, r = l = n = a = void 0; }, b.flush = function () { return void 0 === a ? o : g(ti()); }, b; }; const ni = 'Expected a function'; const si = '__lodash_hash_undefined__'; const oi = '[object Function]'; const ai = '[object GeneratorFunction]'; const li = /^\[object .+?Constructor\]$/; const ci = typeof v === 'object' && v && v.Object === Object && v; const ui = typeof self === 'object' && self && self.Object === Object && self; const hi = ci || ui || Function('return this')(); const fi = Array.prototype; const di = Function.prototype; const pi = Object.prototype; const vi = hi['__core-js_shared__']; const gi = (function () { const t = /[^.]+$/.exec(vi && vi.keys && vi.keys.IE_PROTO || ''); return t ? `Symbol(src)_1.${t}` : ''; }()); const bi = di.toString; const mi = pi.hasOwnProperty; const yi = pi.toString; const xi = RegExp(`^${bi.call(mi).replace(/[\\^$.*+?()[\]{}|]/g, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?')}$`); const Ei = fi.splice; const wi = Wi(hi, 'Map'); const Oi = Wi(Object, 'create'); function _i(t) { let e = -1; const i = t ? t.length : 0; for (this.clear(); ++e < i;) { const r = t[e]; this.set(r[0], r[1]); } } function Si(t) { let e = -1; const i = t ? t.length : 0; for (this.clear(); ++e < i;) { const r = t[e]; this.set(r[0], r[1]); } } function Li(t) { let e = -1; const i = t ? t.length : 0; for (this.clear(); ++e < i;) { const r = t[e]; this.set(r[0], r[1]); } } function Ai(t, e) { for (var i, r, n = t.length; n--;) if ((i = t[n][0]) === (r = e) || i != i && r != r) return n; return -1; } function ki(t) { return !(!Ri(t) || (e = t, gi && gi in e)) && ((function (t) { const e = Ri(t) ? yi.call(t) : ''; return e == oi || e == ai; }(t)) || (function (t) { let e = !1; if (t != null && typeof t.toString !== 'function') try { e = !!(`${t}`); } catch (t) {} return e; }(t)) ? xi : li).test(function (t) { if (t != null) { try { return bi.call(t); } catch (t) {} try { return `${t}`; } catch (t) {} } return ''; }(t)); let e; } function Mi(t, e) { let i; let r; const n = t.__data__; return ((r = typeof (i = e)) == 'string' || r == 'number' || r == 'symbol' || r == 'boolean' ? i !== '__proto__' : i === null) ? n[typeof e === 'string' ? 'string' : 'hash'] : n.map; } function Wi(t, e) { const i = (function (t, e) { return t == null ? void 0 : t[e]; }(t, e)); return ki(i) ? i : void 0; } function Ti(t, e) { if (typeof t !== 'function' || e && typeof e !== 'function') throw new TypeError(ni); var i = function () { const r = arguments; const n = e ? e.apply(this, r) : r[0]; const s = i.cache; if (s.has(n)) return s.get(n); const o = t.apply(this, r); return i.cache = s.set(n, o), o; }; return i.cache = new (Ti.Cache || Li)(), i; } function Ri(t) { const e = typeof t; return !!t && (e == 'object' || e == 'function'); }_i.prototype.clear = function () { this.__data__ = Oi ? Oi(null) : {}; }, _i.prototype.delete = function (t) { return this.has(t) && delete this.__data__[t]; }, _i.prototype.get = function (t) { const e = this.__data__; if (Oi) { const i = e[t]; return i === si ? void 0 : i; } return mi.call(e, t) ? e[t] : void 0; }, _i.prototype.has = function (t) { const e = this.__data__; return Oi ? void 0 !== e[t] : mi.call(e, t); }, _i.prototype.set = function (t, e) { return this.__data__[t] = Oi && void 0 === e ? si : e, this; }, Si.prototype.clear = function () { this.__data__ = []; }, Si.prototype.delete = function (t) { const e = this.__data__; const i = Ai(e, t); return !(i < 0 || (i == e.length - 1 ? e.pop() : Ei.call(e, i, 1), 0)); }, Si.prototype.get = function (t) { const e = this.__data__; const i = Ai(e, t); return i < 0 ? void 0 : e[i][1]; }, Si.prototype.has = function (t) { return Ai(this.__data__, t) > -1; }, Si.prototype.set = function (t, e) { const i = this.__data__; const r = Ai(i, t); return r < 0 ? i.push([t, e]) : i[r][1] = e, this; }, Li.prototype.clear = function () { this.__data__ = { hash: new _i(), map: new (wi || Si)(), string: new _i() }; }, Li.prototype.delete = function (t) { return Mi(this, t).delete(t); }, Li.prototype.get = function (t) { return Mi(this, t).get(t); }, Li.prototype.has = function (t) { return Mi(this, t).has(t); }, Li.prototype.set = function (t, e) { return Mi(this, t).set(t, e), this; }, Ti.Cache = Li; const ji = Ti; const Ci = (function () { if (typeof Map !== 'undefined') return Map; function t(t, e) { let i = -1; return t.some((t, r) => t[0] === e && (i = r, !0)), i; } return (function () { function e() { this.__entries__ = []; } return Object.defineProperty(e.prototype, 'size', { get() { return this.__entries__.length; }, enumerable: !0, configurable: !0 }), e.prototype.get = function (e) { const i = t(this.__entries__, e); const r = this.__entries__[i]; return r && r[1]; }, e.prototype.set = function (e, i) { const r = t(this.__entries__, e); ~r ? this.__entries__[r][1] = i : this.__entries__.push([e, i]); }, e.prototype.delete = function (e) { const i = this.__entries__; const r = t(i, e); ~r && i.splice(r, 1); }, e.prototype.has = function (e) { return !!~t(this.__entries__, e); }, e.prototype.clear = function () { this.__entries__.splice(0); }, e.prototype.forEach = function (t, e) { void 0 === e && (e = null); for (let i = 0, r = this.__entries__; i < r.length; i++) { const n = r[i]; t.call(e, n[1], n[0]); } }, e; }()); }()); const Ni = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document; const zi = typeof global !== 'undefined' && global.Math === Math ? global : typeof self !== 'undefined' && self.Math === Math ? self : typeof window !== 'undefined' && window.Math === Math ? window : Function('return this')(); const Di = typeof requestAnimationFrame === 'function' ? requestAnimationFrame.bind(zi) : function (t) { return setTimeout(() => t(Date.now()), 1e3 / 60); }; const Vi = 2; const Bi = 20; const Ii = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight']; const Pi = typeof MutationObserver !== 'undefined'; const Hi = (function () {
    function t() { this.connected_ = !1, this.mutationEventsAdded_ = !1, this.mutationsObserver_ = null, this.observers_ = [], this.onTransitionEnd_ = this.onTransitionEnd_.bind(this), this.refresh = (function (t, e) { let i = !1; let r = !1; let n = 0; function s() { i && (i = !1, t()), r && a(); } function o() { Di(s); } function a() { const t = Date.now(); if (i) { if (t - n < Vi) return; r = !0; } else i = !0, r = !1, setTimeout(o, e); n = t; } return a; }(this.refresh.bind(this), Bi)); } return t.prototype.addObserver = function (t) { ~this.observers_.indexOf(t) || this.observers_.push(t), this.connected_ || this.connect_(); }, t.prototype.removeObserver = function (t) { const e = this.observers_; const i = e.indexOf(t); ~i && e.splice(i, 1), !e.length && this.connected_ && this.disconnect_(); }, t.prototype.refresh = function () { this.updateObservers_() && this.refresh(); }, t.prototype.updateObservers_ = function () { const t = this.observers_.filter((t) => (t.gatherActive(), t.hasActive())); return t.forEach((t) => t.broadcastActive()), t.length > 0; }, t.prototype.connect_ = function () {
      Ni && !this.connected_ && (document.addEventListener('transitionend', this.onTransitionEnd_), window.addEventListener('resize', this.refresh), Pi ? (this.mutationsObserver_ = new MutationObserver(this.refresh), this.mutationsObserver_.observe(document, {
        attributes: !0, childList: !0, characterData: !0, subtree: !0,
      })) : (document.addEventListener('DOMSubtreeModified', this.refresh), this.mutationEventsAdded_ = !0), this.connected_ = !0);
    }, t.prototype.disconnect_ = function () { Ni && this.connected_ && (document.removeEventListener('transitionend', this.onTransitionEnd_), window.removeEventListener('resize', this.refresh), this.mutationsObserver_ && this.mutationsObserver_.disconnect(), this.mutationEventsAdded_ && document.removeEventListener('DOMSubtreeModified', this.refresh), this.mutationsObserver_ = null, this.mutationEventsAdded_ = !1, this.connected_ = !1); }, t.prototype.onTransitionEnd_ = function (t) { const e = t.propertyName; const i = void 0 === e ? '' : e; Ii.some((t) => !!~i.indexOf(t)) && this.refresh(); }, t.getInstance = function () { return this.instance_ || (this.instance_ = new t()), this.instance_; }, t.instance_ = null, t;
  }()); const qi = function (t, e) {
    for (let i = 0, r = Object.keys(e); i < r.length; i++) {
      const n = r[i]; Object.defineProperty(t, n, {
        value: e[n], enumerable: !1, writable: !1, configurable: !0,
      });
    } return t;
  }; const Fi = function (t) { return t && t.ownerDocument && t.ownerDocument.defaultView || zi; }; const $i = Ji(0, 0, 0, 0); function Yi(t) { return parseFloat(t) || 0; } function Xi(t) { for (var e = [], i = 1; i < arguments.length; i++)e[i - 1] = arguments[i]; return e.reduce((e, i) => e + Yi(t[`border-${i}-width`]), 0); } function Gi(t) { const e = t.clientWidth; const i = t.clientHeight; if (!e && !i) return $i; const r = Fi(t).getComputedStyle(t); const n = (function (t) { for (var e = {}, i = 0, r = ['top', 'right', 'bottom', 'left']; i < r.length; i++) { const n = r[i]; const s = t[`padding-${n}`]; e[n] = Yi(s); } return e; }(r)); const s = n.left + n.right; const o = n.top + n.bottom; let a = Yi(r.width); let l = Yi(r.height); if (r.boxSizing === 'border-box' && (Math.round(a + s) !== e && (a -= Xi(r, 'left', 'right') + s), Math.round(l + o) !== i && (l -= Xi(r, 'top', 'bottom') + o)), !(function (t) { return t === Fi(t).document.documentElement; }(t))) { const c = Math.round(a + s) - e; const u = Math.round(l + o) - i; Math.abs(c) !== 1 && (a -= c), Math.abs(u) !== 1 && (l -= u); } return Ji(n.left, n.top, a, l); } const Ki = typeof SVGGraphicsElement !== 'undefined' ? function (t) { return t instanceof Fi(t).SVGGraphicsElement; } : function (t) { return t instanceof Fi(t).SVGElement && typeof t.getBBox === 'function'; }; function Ui(t) { return Ni ? Ki(t) ? (function (t) { const e = t.getBBox(); return Ji(0, 0, e.width, e.height); }(t)) : Gi(t) : $i; } function Ji(t, e, i, r) {
    return {
      x: t, y: e, width: i, height: r,
    };
  } const Qi = (function () { function t(t) { this.broadcastWidth = 0, this.broadcastHeight = 0, this.contentRect_ = Ji(0, 0, 0, 0), this.target = t; } return t.prototype.isActive = function () { const t = Ui(this.target); return this.contentRect_ = t, t.width !== this.broadcastWidth || t.height !== this.broadcastHeight; }, t.prototype.broadcastRect = function () { const t = this.contentRect_; return this.broadcastWidth = t.width, this.broadcastHeight = t.height, t; }, t; }()); const Zi = (function () {
    return function (t, e) {
      let i; let r; let n; let s; let o; let a; let l; const c = (r = (i = e).x, n = i.y, s = i.width, o = i.height, a = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object, l = Object.create(a.prototype), qi(l, {
        x: r, y: n, width: s, height: o, top: n, right: r + s, bottom: o + n, left: r,
      }), l); qi(this, { target: t, contentRect: c });
    };
  }()); const tr = (function () { function t(t, e, i) { if (this.activeObservations_ = [], this.observations_ = new Ci(), typeof t !== 'function') throw new TypeError('The callback provided as parameter 1 is not a function.'); this.callback_ = t, this.controller_ = e, this.callbackCtx_ = i; } return t.prototype.observe = function (t) { if (!arguments.length) throw new TypeError('1 argument required, but only 0 present.'); if (typeof Element !== 'undefined' && Element instanceof Object) { if (!(t instanceof Fi(t).Element)) throw new TypeError('parameter 1 is not of type "Element".'); const e = this.observations_; e.has(t) || (e.set(t, new Qi(t)), this.controller_.addObserver(this), this.controller_.refresh()); } }, t.prototype.unobserve = function (t) { if (!arguments.length) throw new TypeError('1 argument required, but only 0 present.'); if (typeof Element !== 'undefined' && Element instanceof Object) { if (!(t instanceof Fi(t).Element)) throw new TypeError('parameter 1 is not of type "Element".'); const e = this.observations_; e.has(t) && (e.delete(t), e.size || this.controller_.removeObserver(this)); } }, t.prototype.disconnect = function () { this.clearActive(), this.observations_.clear(), this.controller_.removeObserver(this); }, t.prototype.gatherActive = function () { const t = this; this.clearActive(), this.observations_.forEach((e) => { e.isActive() && t.activeObservations_.push(e); }); }, t.prototype.broadcastActive = function () { if (this.hasActive()) { const t = this.callbackCtx_; const e = this.activeObservations_.map((t) => new Zi(t.target, t.broadcastRect())); this.callback_.call(t, e, t), this.clearActive(); } }, t.prototype.clearActive = function () { this.activeObservations_.splice(0); }, t.prototype.hasActive = function () { return this.activeObservations_.length > 0; }, t; }()); const er = typeof WeakMap !== 'undefined' ? new WeakMap() : new Ci(); const ir = (function () { return function t(e) { if (!(this instanceof t)) throw new TypeError('Cannot call a class as a function.'); if (!arguments.length) throw new TypeError('1 argument required, but only 0 present.'); const i = Hi.getInstance(); const r = new tr(e, i, this); er.set(this, r); }; }()); ['observe', 'unobserve', 'disconnect'].forEach((t) => { ir.prototype[t] = function () { let e; return (e = er.get(this))[t].apply(e, arguments); }; }); const rr = void 0 !== zi.ResizeObserver ? zi.ResizeObserver : ir; const nr = !(typeof window === 'undefined' || !window.document || !window.document.createElement); function sr() { if (typeof document === 'undefined') return 0; const t = document.body; const e = document.createElement('div'); const i = e.style; i.position = 'fixed', i.left = 0, i.visibility = 'hidden', i.overflowY = 'scroll', t.appendChild(e); const r = e.getBoundingClientRect().right; return t.removeChild(e), r; } const or = (function () {
    function t(e, i) {
      const r = this; this.onScroll = function () { r.scrollXTicking || (window.requestAnimationFrame(r.scrollX), r.scrollXTicking = !0), r.scrollYTicking || (window.requestAnimationFrame(r.scrollY), r.scrollYTicking = !0); }, this.scrollX = function () { r.axis.x.isOverflowing && (r.showScrollbar('x'), r.positionScrollbar('x')), r.scrollXTicking = !1; }, this.scrollY = function () { r.axis.y.isOverflowing && (r.showScrollbar('y'), r.positionScrollbar('y')), r.scrollYTicking = !1; }, this.onMouseEnter = function () { r.showScrollbar('x'), r.showScrollbar('y'); }, this.onMouseMove = function (t) { r.mouseX = t.clientX, r.mouseY = t.clientY, (r.axis.x.isOverflowing || r.axis.x.forceVisible) && r.onMouseMoveForAxis('x'), (r.axis.y.isOverflowing || r.axis.y.forceVisible) && r.onMouseMoveForAxis('y'); }, this.onMouseLeave = function () { r.onMouseMove.cancel(), (r.axis.x.isOverflowing || r.axis.x.forceVisible) && r.onMouseLeaveForAxis('x'), (r.axis.y.isOverflowing || r.axis.y.forceVisible) && r.onMouseLeaveForAxis('y'), r.mouseX = -1, r.mouseY = -1; }, this.onWindowResize = function () { r.scrollbarWidth = sr(), r.hideNativeScrollbar(); }, this.hideScrollbars = function () { r.axis.x.track.rect = r.axis.x.track.el.getBoundingClientRect(), r.axis.y.track.rect = r.axis.y.track.el.getBoundingClientRect(), r.isWithinBounds(r.axis.y.track.rect) || (r.axis.y.scrollbar.el.classList.remove(r.classNames.visible), r.axis.y.isVisible = !1), r.isWithinBounds(r.axis.x.track.rect) || (r.axis.x.scrollbar.el.classList.remove(r.classNames.visible), r.axis.x.isVisible = !1); }, this.onPointerEvent = function (t) { let e; let i; r.axis.x.scrollbar.rect = r.axis.x.scrollbar.el.getBoundingClientRect(), r.axis.y.scrollbar.rect = r.axis.y.scrollbar.el.getBoundingClientRect(), (r.axis.x.isOverflowing || r.axis.x.forceVisible) && (i = r.isWithinBounds(r.axis.x.scrollbar.rect)), (r.axis.y.isOverflowing || r.axis.y.forceVisible) && (e = r.isWithinBounds(r.axis.y.scrollbar.rect)), (e || i) && (t.preventDefault(), t.stopPropagation(), t.type === 'mousedown' && (e && r.onDragStart(t, 'y'), i && r.onDragStart(t, 'x'))); }, this.drag = function (e) { const i = r.axis[r.draggedAxis].track; const n = i.rect[r.axis[r.draggedAxis].sizeAttr]; const s = r.axis[r.draggedAxis].scrollbar; e.preventDefault(), e.stopPropagation(); let o = ((r.draggedAxis === 'y' ? e.pageY : e.pageX) - i.rect[r.axis[r.draggedAxis].offsetAttr] - r.axis[r.draggedAxis].dragOffset) / i.rect[r.axis[r.draggedAxis].sizeAttr] * r.contentWrapperEl[r.axis[r.draggedAxis].scrollSizeAttr]; r.draggedAxis === 'x' && (o = r.isRtl && t.getRtlHelpers().isRtlScrollbarInverted ? o - (n + s.size) : o, o = r.isRtl && t.getRtlHelpers().isRtlScrollingInverted ? -o : o), r.contentWrapperEl[r.axis[r.draggedAxis].scrollOffsetAttr] = o; }, this.onEndDrag = function (t) { t.preventDefault(), t.stopPropagation(), r.el.classList.remove(r.classNames.dragging), document.removeEventListener('mousemove', r.drag, !0), document.removeEventListener('mouseup', r.onEndDrag, !0), r.removePreventClickId = window.setTimeout(() => { document.removeEventListener('click', r.preventClick, !0), document.removeEventListener('dblclick', r.preventClick, !0), r.removePreventClickId = null; }); }, this.preventClick = function (t) { t.preventDefault(), t.stopPropagation(); }, this.el = e, this.flashTimeout, this.contentEl, this.contentWrapperEl, this.offsetEl, this.maskEl, this.globalObserver, this.mutationObserver, this.resizeObserver, this.scrollbarWidth, this.minScrollbarWidth = 20, this.options = { ...t.defaultOptions, ...i }, this.classNames = { ...t.defaultOptions.classNames, ...this.options.classNames }, this.isRtl, this.axis = {
        x: {
          scrollOffsetAttr: 'scrollLeft', sizeAttr: 'width', scrollSizeAttr: 'scrollWidth', offsetAttr: 'left', overflowAttr: 'overflowX', dragOffset: 0, isOverflowing: !0, isVisible: !1, forceVisible: !1, track: {}, scrollbar: {},
        },
        y: {
          scrollOffsetAttr: 'scrollTop', sizeAttr: 'height', scrollSizeAttr: 'scrollHeight', offsetAttr: 'top', overflowAttr: 'overflowY', dragOffset: 0, isOverflowing: !0, isVisible: !1, forceVisible: !1, track: {}, scrollbar: {},
        },
      }, this.removePreventClickId = null, this.el.SimpleBar || (this.recalculate = Be(this.recalculate.bind(this), 64), this.onMouseMove = Be(this.onMouseMove.bind(this), 64), this.hideScrollbars = ri(this.hideScrollbars.bind(this), this.options.timeout), this.onWindowResize = ri(this.onWindowResize.bind(this), 64, { leading: !0 }), t.getRtlHelpers = ji(t.getRtlHelpers), this.init());
    }t.getRtlHelpers = function () { const e = document.createElement('div'); e.innerHTML = '<div class="hs-dummy-scrollbar-size"><div style="height: 200%; width: 200%; margin: 10px 0;"></div></div>'; const i = e.firstElementChild; document.body.appendChild(i); const r = i.firstElementChild; i.scrollLeft = 0; const n = t.getOffset(i); const s = t.getOffset(r); i.scrollLeft = 999; const o = t.getOffset(r); return { isRtlScrollingInverted: n.left !== s.left && s.left - o.left != 0, isRtlScrollbarInverted: n.left !== s.left }; }, t.initHtmlApi = function () { this.initDOMLoadedElements = this.initDOMLoadedElements.bind(this), typeof MutationObserver !== 'undefined' && (this.globalObserver = new MutationObserver(((e) => { e.forEach((e) => { Array.prototype.forEach.call(e.addedNodes, (e) => { e.nodeType === 1 && (e.hasAttribute('data-simplebar') ? !e.SimpleBar && new t(e, t.getElOptions(e)) : Array.prototype.forEach.call(e.querySelectorAll('[data-simplebar]'), (e) => { !e.SimpleBar && new t(e, t.getElOptions(e)); })); }), Array.prototype.forEach.call(e.removedNodes, (t) => { t.nodeType === 1 && (t.hasAttribute('data-simplebar') ? t.SimpleBar && t.SimpleBar.unMount() : Array.prototype.forEach.call(t.querySelectorAll('[data-simplebar]'), (t) => { t.SimpleBar && t.SimpleBar.unMount(); })); }); }); })), this.globalObserver.observe(document, { childList: !0, subtree: !0 })), document.readyState === 'complete' || document.readyState !== 'loading' && !document.documentElement.doScroll ? window.setTimeout(this.initDOMLoadedElements) : (document.addEventListener('DOMContentLoaded', this.initDOMLoadedElements), window.addEventListener('load', this.initDOMLoadedElements)); }, t.getElOptions = function (t) { return Array.prototype.reduce.call(t.attributes, (t, e) => { const i = e.name.match(/data-simplebar-(.+)/); if (i) { const r = i[1].replace(/\W+(.)/g, (t, e) => e.toUpperCase()); switch (e.value) { case 'true': t[r] = !0; break; case 'false': t[r] = !1; break; case void 0: t[r] = !0; break; default: t[r] = e.value; } } return t; }, {}); }, t.removeObserver = function () { this.globalObserver.disconnect(); }, t.initDOMLoadedElements = function () { document.removeEventListener('DOMContentLoaded', this.initDOMLoadedElements), window.removeEventListener('load', this.initDOMLoadedElements), Array.prototype.forEach.call(document.querySelectorAll('[data-simplebar]'), (e) => { e.SimpleBar || new t(e, t.getElOptions(e)); }); }, t.getOffset = function (t) { const e = t.getBoundingClientRect(); return { top: e.top + (window.pageYOffset || document.documentElement.scrollTop), left: e.left + (window.pageXOffset || document.documentElement.scrollLeft) }; }; const e = t.prototype; return e.init = function () { this.el.SimpleBar = this, nr && (this.initDOM(), this.scrollbarWidth = sr(), this.recalculate(), this.initListeners()); }, e.initDOM = function () { const t = this; if (Array.prototype.filter.call(this.el.children, (e) => e.classList.contains(t.classNames.wrapper)).length) this.wrapperEl = this.el.querySelector(`.${this.classNames.wrapper}`), this.contentWrapperEl = this.el.querySelector(`.${this.classNames.contentWrapper}`), this.offsetEl = this.el.querySelector(`.${this.classNames.offset}`), this.maskEl = this.el.querySelector(`.${this.classNames.mask}`), this.contentEl = this.el.querySelector(`.${this.classNames.contentEl}`), this.placeholderEl = this.el.querySelector(`.${this.classNames.placeholder}`), this.heightAutoObserverWrapperEl = this.el.querySelector(`.${this.classNames.heightAutoObserverWrapperEl}`), this.heightAutoObserverEl = this.el.querySelector(`.${this.classNames.heightAutoObserverEl}`), this.axis.x.track.el = this.el.querySelector(`.${this.classNames.track}.${this.classNames.horizontal}`), this.axis.y.track.el = this.el.querySelector(`.${this.classNames.track}.${this.classNames.vertical}`); else { for (this.wrapperEl = document.createElement('div'), this.contentWrapperEl = document.createElement('div'), this.offsetEl = document.createElement('div'), this.maskEl = document.createElement('div'), this.contentEl = document.createElement('div'), this.placeholderEl = document.createElement('div'), this.heightAutoObserverWrapperEl = document.createElement('div'), this.heightAutoObserverEl = document.createElement('div'), this.wrapperEl.classList.add(this.classNames.wrapper), this.contentWrapperEl.classList.add(this.classNames.contentWrapper), this.offsetEl.classList.add(this.classNames.offset), this.maskEl.classList.add(this.classNames.mask), this.contentEl.classList.add(this.classNames.contentEl), this.placeholderEl.classList.add(this.classNames.placeholder), this.heightAutoObserverWrapperEl.classList.add(this.classNames.heightAutoObserverWrapperEl), this.heightAutoObserverEl.classList.add(this.classNames.heightAutoObserverEl); this.el.firstChild;) this.contentEl.appendChild(this.el.firstChild); this.contentWrapperEl.appendChild(this.contentEl), this.offsetEl.appendChild(this.contentWrapperEl), this.maskEl.appendChild(this.offsetEl), this.heightAutoObserverWrapperEl.appendChild(this.heightAutoObserverEl), this.wrapperEl.appendChild(this.heightAutoObserverWrapperEl), this.wrapperEl.appendChild(this.maskEl), this.wrapperEl.appendChild(this.placeholderEl), this.el.appendChild(this.wrapperEl); } if (!this.axis.x.track.el || !this.axis.y.track.el) { const e = document.createElement('div'); const i = document.createElement('div'); e.classList.add(this.classNames.track), i.classList.add(this.classNames.scrollbar), e.appendChild(i), this.axis.x.track.el = e.cloneNode(!0), this.axis.x.track.el.classList.add(this.classNames.horizontal), this.axis.y.track.el = e.cloneNode(!0), this.axis.y.track.el.classList.add(this.classNames.vertical), this.el.appendChild(this.axis.x.track.el), this.el.appendChild(this.axis.y.track.el); } this.axis.x.scrollbar.el = this.axis.x.track.el.querySelector(`.${this.classNames.scrollbar}`), this.axis.y.scrollbar.el = this.axis.y.track.el.querySelector(`.${this.classNames.scrollbar}`), this.options.autoHide || (this.axis.x.scrollbar.el.classList.add(this.classNames.visible), this.axis.y.scrollbar.el.classList.add(this.classNames.visible)), this.el.setAttribute('data-simplebar', 'init'); }, e.initListeners = function () { const t = this; this.options.autoHide && this.el.addEventListener('mouseenter', this.onMouseEnter), ['mousedown', 'click', 'dblclick', 'touchstart', 'touchend', 'touchmove'].forEach((e) => { t.el.addEventListener(e, t.onPointerEvent, !0); }), this.el.addEventListener('mousemove', this.onMouseMove), this.el.addEventListener('mouseleave', this.onMouseLeave), this.contentWrapperEl.addEventListener('scroll', this.onScroll), window.addEventListener('resize', this.onWindowResize), this.resizeObserver = new rr(this.recalculate), this.resizeObserver.observe(this.el), this.resizeObserver.observe(this.contentEl); }, e.recalculate = function () { const t = this.heightAutoObserverEl.offsetHeight <= 1; const e = this.heightAutoObserverEl.offsetWidth <= 1; this.elStyles = window.getComputedStyle(this.el), this.isRtl = this.elStyles.direction === 'rtl', this.contentEl.style.padding = `${this.elStyles.paddingTop} ${this.elStyles.paddingRight} ${this.elStyles.paddingBottom} ${this.elStyles.paddingLeft}`, this.wrapperEl.style.margin = `-${this.elStyles.paddingTop} -${this.elStyles.paddingRight} -${this.elStyles.paddingBottom} -${this.elStyles.paddingLeft}`, this.contentWrapperEl.style.height = t ? 'auto' : '100%', this.placeholderEl.style.width = e ? `${this.contentEl.offsetWidth}px` : 'auto', this.placeholderEl.style.height = `${this.contentEl.scrollHeight}px`, this.axis.x.isOverflowing = this.contentWrapperEl.scrollWidth > this.contentWrapperEl.offsetWidth, this.axis.y.isOverflowing = this.contentWrapperEl.scrollHeight > this.contentWrapperEl.offsetHeight, this.axis.x.isOverflowing = this.elStyles.overflowX !== 'hidden' && this.axis.x.isOverflowing, this.axis.y.isOverflowing = this.elStyles.overflowY !== 'hidden' && this.axis.y.isOverflowing, this.axis.x.forceVisible = this.options.forceVisible === 'x' || !0 === this.options.forceVisible, this.axis.y.forceVisible = this.options.forceVisible === 'y' || !0 === this.options.forceVisible, this.hideNativeScrollbar(), this.axis.x.track.rect = this.axis.x.track.el.getBoundingClientRect(), this.axis.y.track.rect = this.axis.y.track.el.getBoundingClientRect(), this.axis.x.scrollbar.size = this.getScrollbarSize('x'), this.axis.y.scrollbar.size = this.getScrollbarSize('y'), this.axis.x.scrollbar.el.style.width = `${this.axis.x.scrollbar.size}px`, this.axis.y.scrollbar.el.style.height = `${this.axis.y.scrollbar.size}px`, this.positionScrollbar('x'), this.positionScrollbar('y'), this.toggleTrackVisibility('x'), this.toggleTrackVisibility('y'); }, e.getScrollbarSize = function (t) { void 0 === t && (t = 'y'); let e; const i = this.scrollbarWidth ? this.contentWrapperEl[this.axis[t].scrollSizeAttr] : this.contentWrapperEl[this.axis[t].scrollSizeAttr] - this.minScrollbarWidth; const r = this.axis[t].track.rect[this.axis[t].sizeAttr]; if (this.axis[t].isOverflowing) { const n = r / i; return e = Math.max(~~(n * r), this.options.scrollbarMinSize), this.options.scrollbarMaxSize && (e = Math.min(e, this.options.scrollbarMaxSize)), e; } }, e.positionScrollbar = function (e) { void 0 === e && (e = 'y'); const i = this.contentWrapperEl[this.axis[e].scrollSizeAttr]; const r = this.axis[e].track.rect[this.axis[e].sizeAttr]; const n = parseInt(this.elStyles[this.axis[e].sizeAttr], 10); const s = this.axis[e].scrollbar; let o = this.contentWrapperEl[this.axis[e].scrollOffsetAttr]; const a = (o = e === 'x' && this.isRtl && t.getRtlHelpers().isRtlScrollingInverted ? -o : o) / (i - n); let l = ~~((r - s.size) * a); l = e === 'x' && this.isRtl && t.getRtlHelpers().isRtlScrollbarInverted ? l + (r - s.size) : l, s.el.style.transform = e === 'x' ? `translate3d(${l}px, 0, 0)` : `translate3d(0, ${l}px, 0)`; }, e.toggleTrackVisibility = function (t) { void 0 === t && (t = 'y'); const e = this.axis[t].track.el; const i = this.axis[t].scrollbar.el; this.axis[t].isOverflowing || this.axis[t].forceVisible ? (e.style.visibility = 'visible', this.contentWrapperEl.style[this.axis[t].overflowAttr] = 'scroll') : (e.style.visibility = 'hidden', this.contentWrapperEl.style[this.axis[t].overflowAttr] = 'hidden'), this.axis[t].isOverflowing ? i.style.display = 'block' : i.style.display = 'none'; }, e.hideNativeScrollbar = function () { if (this.offsetEl.style[this.isRtl ? 'left' : 'right'] = this.axis.y.isOverflowing || this.axis.y.forceVisible ? `-${this.scrollbarWidth || this.minScrollbarWidth}px` : 0, this.offsetEl.style.bottom = this.axis.x.isOverflowing || this.axis.x.forceVisible ? `-${this.scrollbarWidth || this.minScrollbarWidth}px` : 0, !this.scrollbarWidth) { const t = [this.isRtl ? 'paddingLeft' : 'paddingRight']; this.contentWrapperEl.style[t] = this.axis.y.isOverflowing || this.axis.y.forceVisible ? `${this.minScrollbarWidth}px` : 0, this.contentWrapperEl.style.paddingBottom = this.axis.x.isOverflowing || this.axis.x.forceVisible ? `${this.minScrollbarWidth}px` : 0; } }, e.onMouseMoveForAxis = function (t) { void 0 === t && (t = 'y'), this.axis[t].track.rect = this.axis[t].track.el.getBoundingClientRect(), this.axis[t].scrollbar.rect = this.axis[t].scrollbar.el.getBoundingClientRect(), this.isWithinBounds(this.axis[t].scrollbar.rect) ? this.axis[t].scrollbar.el.classList.add(this.classNames.hover) : this.axis[t].scrollbar.el.classList.remove(this.classNames.hover), this.isWithinBounds(this.axis[t].track.rect) ? (this.showScrollbar(t), this.axis[t].track.el.classList.add(this.classNames.hover)) : this.axis[t].track.el.classList.remove(this.classNames.hover); }, e.onMouseLeaveForAxis = function (t) { void 0 === t && (t = 'y'), this.axis[t].track.el.classList.remove(this.classNames.hover), this.axis[t].scrollbar.el.classList.remove(this.classNames.hover); }, e.showScrollbar = function (t) { void 0 === t && (t = 'y'); const e = this.axis[t].scrollbar.el; this.axis[t].isVisible || (e.classList.add(this.classNames.visible), this.axis[t].isVisible = !0), this.options.autoHide && this.hideScrollbars(); }, e.onDragStart = function (t, e) { void 0 === e && (e = 'y'); const i = this.axis[e].scrollbar.el; const r = e === 'y' ? t.pageY : t.pageX; this.axis[e].dragOffset = r - i.getBoundingClientRect()[this.axis[e].offsetAttr], this.draggedAxis = e, this.el.classList.add(this.classNames.dragging), document.addEventListener('mousemove', this.drag, !0), document.addEventListener('mouseup', this.onEndDrag, !0), this.removePreventClickId === null ? (document.addEventListener('click', this.preventClick, !0), document.addEventListener('dblclick', this.preventClick, !0)) : (window.clearTimeout(this.removePreventClickId), this.removePreventClickId = null); }, e.getContentElement = function () { return this.contentEl; }, e.getScrollElement = function () { return this.contentWrapperEl; }, e.removeListeners = function () { const t = this; this.options.autoHide && this.el.removeEventListener('mouseenter', this.onMouseEnter), ['mousedown', 'click', 'dblclick', 'touchstart', 'touchend', 'touchmove'].forEach((e) => { t.el.removeEventListener(e, t.onPointerEvent); }), this.el.removeEventListener('mousemove', this.onMouseMove), this.el.removeEventListener('mouseleave', this.onMouseLeave), this.contentWrapperEl.removeEventListener('scroll', this.onScroll), window.removeEventListener('resize', this.onWindowResize), this.mutationObserver && this.mutationObserver.disconnect(), this.resizeObserver.disconnect(), this.recalculate.cancel(), this.onMouseMove.cancel(), this.hideScrollbars.cancel(), this.onWindowResize.cancel(); }, e.unMount = function () { this.removeListeners(), this.el.SimpleBar = null; }, e.isChildNode = function (t) { return t !== null && (t === this.el || this.isChildNode(t.parentNode)); }, e.isWithinBounds = function (t) { return this.mouseX >= t.left && this.mouseX <= t.left + t.width && this.mouseY >= t.top && this.mouseY <= t.top + t.height; }, t;
  }()); return or.defaultOptions = {
    autoHide: !0,
    forceVisible: !1,
    classNames: {
      contentEl: 'simplebar-content', contentWrapper: 'simplebar-content-wrapper', offset: 'simplebar-offset', mask: 'simplebar-mask', wrapper: 'simplebar-wrapper', placeholder: 'simplebar-placeholder', scrollbar: 'simplebar-scrollbar', track: 'simplebar-track', heightAutoObserverWrapperEl: 'simplebar-height-auto-observer-wrapper', heightAutoObserverEl: 'simplebar-height-auto-observer', visible: 'simplebar-visible', horizontal: 'simplebar-horizontal', vertical: 'simplebar-vertical', hover: 'simplebar-hover', dragging: 'simplebar-dragging',
    },
    scrollbarMinSize: 25,
    scrollbarMaxSize: 0,
    timeout: 1e3,
  }, nr && or.initHtmlApi(), or;
}));
